---
- name: add ptinsight-ui user
  become: true
  user:
    name: "{{ deploy_user }}"
    
- name: create deploy directory
  become: true
  file:
    path: "{{ deploy_path }}"
    state: directory
    owner: "{{ deploy_user }}"
    group: "{{ deploy_user }}"

- name: upload application
  become: true
  become_user: "{{ deploy_user }}"
  copy:
    src: "{{ source_path }}/{{ item }}"
    dest: "{{ deploy_path }}/{{ item |dirname }}"
  loop:
    - Pipfile
    - Pipfile.lock
    - ptinsight/
    - static/html/
    - static/scss/
    - static/js/
  notify:
    - restart UI service

- name: create config directory
  become: true
  become_user: "{{ deploy_user }}"
  file:
    path: "{{ deploy_path }}/config"
    state: directory

- name: get Kafka server addresses
  command:
    argv: 
      - "{{ playbook_dir }}/../../tools/terraform-inventory/terraform_inventory.py"
      - --list-private
    chdir: "{{ playbook_dir }}/.."
  delegate_to: localhost
  register: kafka_bootstrap_servers

- name: upload config
  become: true
  become_user: "{{ deploy_user }}"
  template:
    src: ui.yaml.j2
    dest: "{{ deploy_path }}/config/ui.yaml"
  notify:
    - restart UI service

- name: Copy UI service file
  become: true
  template:
    src: ptinsight-ui.service.j2
    dest: /usr/lib/systemd/system/ptinsight-ui.service

- name: reload systemd
  become: true
  systemd:
    daemon_reload: yes

- name: install dependencies
  become: true
  become_user: "{{ deploy_user }}"
  command: 
    cmd: pipenv sync
    chdir: "{{ deploy_path }}"

- meta: flush_handlers

- name: start the UI service
  become: true
  service:
    name: ptinsight-ui
    state: started
    enabled: yes
