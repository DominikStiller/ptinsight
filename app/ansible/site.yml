---
- name: set up playbook variables
  hosts: all
  tags: always
  run_once: true
  tasks:
    - name: get Zookeeper hosts
      set_fact:
        zookeeper_hosts: "{{ groups['zookeeper'] | map('extract', hostvars, 'private_ip_addr') | list }}"
    - name: get Zookeeper server addresses
      set_fact:
        zookeeper_servers: "{{ zookeeper_hosts | map('regex_replace', '$', ':2181') | list }}"
    - name: get Kafka server addresses
      set_fact:
        kafka_servers: "{{ groups['kafka'] | map('extract', hostvars, 'private_ip_addr') | map('regex_replace', '$', ':9092') | list }}"
    - name: get cloud resources
      command:
        cmd: "{{ playbook_dir }}/../../tools/terraform-inventory/terraform_inventory.py --resources"
        chdir: "{{ playbook_dir }}/.."
      delegate_to: localhost
      register: tmp
    - name: get cloud resources
      set_fact:
        cloud_resources: "{{ tmp.stdout | from_json}}"

- name: set up all hosts
  hosts: all
  vars:
    - common_path: "{{ playbook_dir }}/../common"
  roles:
    - role: ../../ansible/roles/common
      tags: [setup, setup-zookeeper, setup-kafka, setup-processing, setup-latencytracker, setup-visualization, setup-ingestion]
    - role: common-build
      tags: always

# Not required since Python is marked as dependency in specific roles
# However, speeds up deployment because installations can happen in parallel
- name: setup Python
  hosts: latencytracker, visualization, ingestion
  roles:
    - role: ../../ansible/roles/python
      tags: [setup, setup-latencytracker, setup-visualization, setup-ingestion]

- name: set up Zookeeper cluster
  hosts: zookeeper
  vars:
    - server_id: "{{ groups['zookeeper'].index(inventory_hostname) + 1 }}"
  roles:
    - role: ../ansible/roles/zookeeper
      tags: [setup, setup-zookeeper]

- name: set up Kafka cluster
  hosts: kafka
  vars:
    - broker_id: "{{ groups['kafka'].index(inventory_hostname) }}"
    - num_partitions_per_topic: 4
  roles:
    - role: ../ansible/roles/kafka
      tags: [setup, setup-kafka]
    - role: kafka-deploy
      tags: [deploy, deploy-kafka]

- name: set up Flink master cluster
  hosts: flink_master
  vars:
    - source_path: "{{ playbook_dir }}/../processing"
    - deploy_path: /opt/ptinsight/processing
    - deploy_user: flink
    - storage_root: "s3://{{ cloud_resources['aws_s3_bucket']['flink'][0]['bucket'] }}"
    - is_master: true
    - build_processing: true
    - job_parallelism: 2
  pre_tasks:
    - name: set first job manager flag
      tags: setup, setup-processing, deploy, deploy-processing
      set_fact:
        is_first_master: "{{ inventory_hostname == groups['flink_master'][0] }}"
  roles:
    - role: ../ansible/roles/flink
      tags: [setup, setup-processing]
    - role: processing-deploy
      tags: [deploy, deploy-processing]
      when: is_first_master

- name: set up Flink worker cluster
  hosts: flink_worker
  vars:
    - source_path: "{{ playbook_dir }}/../processing"
    - deploy_path: /opt/ptinsight/processing
    - deploy_user: flink
    - storage_root: "s3://{{ cloud_resources['aws_s3_bucket']['flink'][0]['bucket'] }}"
    - is_worker: true
    - task_slots_per_worker: 2
  roles:
    - role: ../ansible/roles/flink
      tags: [setup, setup-processing]

- name: set up latency tracker cluster
  hosts: latencytracker
  vars:
    - source_path: "{{ playbook_dir }}/../latencytracker"
    - deploy_path: /opt/ptinsight
    - deploy_user: ptinsight
  roles:
    - role: ../ansible/roles/python
      tags: [setup, setup-latencytracker]
    - role: latencytracker-deploy
      tags: [deploy, deploy-latencytracker]

- name: set up visualization cluster
  hosts: visualization
  vars:
    - source_path: "{{ playbook_dir }}/../visualization"
    - deploy_path: /opt/ptinsight
    - deploy_user: ptinsight
  roles:
    - role: ../ansible/roles/python
      tags: [setup, setup-visualization]
    - role: visualization-deploy
      tags: [deploy, deploy-visualization]

- name: set up ingestion cluster
  hosts: ingestion
  vars:
    - source_path: "{{ playbook_dir }}/../ingestion"
    - deploy_path: /opt/ptinsight
    - deploy_user: ptinsight
  roles:
    - role: ../ansible/roles/python
      tags: [setup, setup-ingestion]
    - role: ingestion-deploy
      tags: [deploy, deploy-ingestion]
